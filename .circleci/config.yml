version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.4

commands:
  # TODO: Find a better to setup pnpm. We could use
  #       an image which have pnpm alreay setup on it.
  #       See: https://github.com/CircleCI-Public/cimg-node/issues/216
  pnpm:
    steps:
      - run:
          name: Install pnpm
          command: curl -f https://get.pnpm.io/v6.js | sudo node - add --global pnpm

      - run:
          name: Setup pnpm store path
          command: pnpm config set store-dir ~/repo/.pnpm-store

jobs:
  install:
    docker:
      - image: cimg/node:16.14.0-browsers
    working_directory: ~/repo
    environment:
      - CYPRESS_CACHE_FOLDER: '~/repo/node_modules/.cache/Cypress'
    steps:
      # Fetch Code
      - checkout
      - pnpm

      - restore_cache:
          keys:
            # Restore cached node_modules
            - v16-dependencies-{{ checksum "pnpm-lock.yaml" }}
            # fallback to using the latest cache if no exact match is found
            - v16-dependencies-

      - run:
          name: Install Dependencies
          command: pnpm install --frozen-lockfile

      # Save the node_modules cache
      - save_cache:
          paths:
            - .pnpm-store
            - node_modules
          key: v16-dependencies-{{ checksum "pnpm-lock.yaml" }}

  validate:
    docker:
      - image: cimg/node:16.14.0-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - pnpm

      - restore_cache:
          keys:
            - v16-dependencies-{{ checksum "pnpm-lock.yaml" }}

      - run:
          name: Lint + Typecheck
          command: pnpm validate

  test-unit:
    docker:
      - image: cimg/node:16.14.0-browsers
    working_directory: ~/repo
    resource_class: medium+
    steps:
      - checkout
      - pnpm

      - restore_cache:
          keys:
            - v16-dependencies-{{ checksum "pnpm-lock.yaml" }}

      - run:
          name: Jest Suite
          command: pnpm test
          environment:
            JEST_JUNIT_OUTPUT: 'test-reports/junit/js-test-results.xml'

      - store_test_results:
          path: test-reports/junit

  test-bundle:
    docker:
      - image: cimg/node:16.14.0-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - pnpm

      - restore_cache:
          keys:
            - v16-dependencies-{{ checksum "pnpm-lock.yaml" }}

      - run:
          name: Check Bundle Size
          command: pnpm run bundle-size:check

  build:
    docker:
      - image: cimg/node:16.14.0-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - pnpm

      - restore_cache:
          keys:
            - v16-dependencies-{{ checksum "pnpm-lock.yaml" }}

      - run:
          name: Build asset
          command: pnpm build

      - persist_to_workspace:
          root: dist
          paths:
            - '*'

  test-browser:
    docker:
      - image: cimg/node:16.14.0-browsers
    working_directory: ~/repo
    environment:
      - CYPRESS_CACHE_FOLDER: '~/repo/node_modules/.cache/Cypress'
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - pnpm

      - attach_workspace:
          at: ~/repo/dist

      - restore_cache:
          keys:
            - v16-dependencies-{{ checksum "pnpm-lock.yaml" }}

      - run:
          name: 'Run cypress'
          command: node browser-test-harness.js pnpm test:browser:ci

      # store videos and screenshots (if any) as CI artifacts
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots

  test-a11y:
    docker:
      - image: cimg/node:16.14.0-browsers
    working_directory: ~/repo
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - pnpm

      - attach_workspace:
          at: ~/repo/dist

      - restore_cache:
          keys:
            - v16-dependencies-{{ checksum "pnpm-lock.yaml" }}

      - run:
          name: Accessibility Audit
          command: node browser-test-harness.js pnpm test:accessibility

      - store_artifacts:
          path: test-reports/lighthouse

      - store_test_results:
          path: test-reports/lighthouse

workflows:
  version: 2
  build:
    jobs:
      - install
      - validate:
          requires:
            - install
      - test-unit:
          requires:
            - install
      - test-bundle:
          requires:
            - install
      - build:
          requires:
            - install
      - test-browser:
          requires:
            - build
      - test-a11y:
          requires:
            - build
